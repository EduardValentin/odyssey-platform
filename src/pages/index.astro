---
import Layout from "../layouts/Layout.astro";
import Mail from "../components/icons/Mail.astro";
import BouncingLink from "../components/BouncingLink.astro";
import Spinner from "../components/Spinner.astro";
---

<Layout
	title="Master Programming Fundamentals: Sign Up for Our Upcoming Course"
>
	<div
		class="pt-10 md:pt-[150px] flex justify-between flex-col gap-20 min-h-full"
	>
		<h1
			class="text-foam text-[2rem]/[2.25rem] md:text-[3rem]/[3.25rem] font-bold text-center"
		>
			Jumpstart your career in software development
		</h1>
		<p
			class="max-w-[1012px] mx-auto text-[0.85rem]/[1.725rem] md:text-[1rem]/[2.125rem] text-center"
		>
			Are you ready to embark on an exhilarating journey into
			the world of programming, starting from scratch? Dive
			into our upcoming course and unlock the secrets to
			becoming a proficient programmer, equipped with the
			skills to tackle any challenge that comes your way.
		</p>

		<div
			id="waitlist-container"
			class="mx-auto flex flex-col items-center justify-center"
		>
			<h3 class="mb-10 text-3xl text-foam">
				Join the waiting list
			</h3>
			<form
				id="waitlist-signup"
				class="flex relative w-full md:w-[615px]"
			>
				<Mail
					class="w-5 md:w-7 fill-base absolute top-1/2 left-5 -translate-y-1/2"
				/>
				<input
					class="bg-rose border-none placeholder-gray-500 w-full pl-16 text-black outline-none focus:bg-rose-moon"
					name="email"
					type="email"
					placeholder="example@mail.com"
					required
				/>
				<button
					id="verify-email-cta"
					type="submit"
					class="bg-rose min-w-28 disabled:bg-rose/60 disabled:text-black/40 font-semibold text-base border-l-base border-l py-5 uppercase px-10 text-[0.85rem]/[1rem] hover:bg-rose-moon"
				>
					<span>Join</span>
					<Spinner
						id="spinner"
						class="hidden mx-auto"
						variant="small"
					/>
				</button>
			</form>
			<div
				class="text-xs text-white/40 text-center mt-5"
				id="consent"
			>
				<div>
					By providing your email address and
					submitting this form, you agree to our <a
						class="hover:text-white text-white/60 underline"
						href="privacy-policy"
						>Privacy Policy</a
					>.
				</div>
				<div>
					Your email address will be used to
					verify your subscription and to notify
					you when the course is ready.
				</div>
			</div>
			<div id="feedback-container" class="mt-5 text-center">
			</div>
		</div>

		<BouncingLink href="/previews/what-will-you-learn">
			See course preview
		</BouncingLink>

		<footer class="flex justify-center">
			<div class="font-jura mb-10">
				<span>Contact us at:</span>
				<a
					class="underline ml-1 hover:text-foam"
					href={`mailto:${import.meta.env.CONTACT_EMAIL}`}
				>
					{import.meta.env.CONTACT_EMAIL}
				</a>
			</div>
			<script
				defer
				is:inline
				src={"https://www.google.com/recaptcha/api.js?render=" +
					import.meta.env.PUBLIC_CAPTCHA_SITE_KEY}
			></script>
		</footer>
	</div>

	<script>
		const formEl = document.getElementsByTagName("form")[0];
		formEl.addEventListener("submit", onSubmit);

		const feedbackEl =
			document.getElementById("feedback-container");

		async function onSubmit(e: SubmitEvent) {
			e.preventDefault();

			const ctaButton =
				document.getElementById("verify-email-cta");
			ctaButton.setAttribute("disabled", "true");

			const buttonText = ctaButton.children[0];
			buttonText.classList.add("hidden");

			const spinner = ctaButton.querySelector(".spinner");
			spinner.classList.remove("hidden");

			grecaptcha.ready(function () {
				grecaptcha
					.execute(
						import.meta.env
							.PUBLIC_CAPTCHA_SITE_KEY,
						{
							action: "submit",
						},
					)
					.then(async function (token: string) {
						const inputEmail =
							document.querySelector(
								'input[name="email"]',
							) as HTMLInputElement;

						await fetch(
							"/api/verify-email",
							{
								method: "POST",
								body: JSON.stringify(
									{
										email: inputEmail?.value,
										token,
									},
								),
							},
						).then((res) => {
							ctaButton.removeAttribute(
								"disabled",
							);

							buttonText.classList.remove(
								"hidden",
							);
							spinner.classList.add(
								"hidden",
							);

							const waitlistContainerEl =
								document.getElementById(
									"waitlist-container",
								);

							waitlistContainerEl.removeChild(
								formEl,
							);

							waitlistContainerEl.removeChild(
								document.getElementById(
									"consent",
								),
							);

							if (
								res.status <
									200 ||
								res.status >=
									400
							) {
								feedbackEl.textContent =
									"We could not send you the verification email. Please try again and if this issue persists don't hesitate to contact us.";

								feedbackEl.className +=
									" text-red-500";
								return;
							}
							feedbackEl.textContent =
								"Thank you for your interest in this course. We sent you an email where you can confirm your registration. Only then your registration will be completed.";

							feedbackEl.className +=
								" text-success";
						});
					});
			});
		}
	</script>
</Layout>
