---
import Layout from "../layouts/Layout.astro";
import Mail from "../components/icons/Mail.astro";
import BouncingLink from "../components/BouncingLink.astro";
---

<Layout
	title="Master Programming Fundamentals: Sign Up for Our Upcoming Course"
>
	<div class="pt-[150px] flex justify-between flex-col h-full">
		<div>
			<h1
				class="text-foam text-[3rem]/[3.25rem] font-bold text-center"
			>
				Jumpstart your career in software development
			</h1>
			<p
				class="mt-[4.25rem] max-w-[1012px] mx-auto text-[1rem]/[2.125rem] text-center"
			>
				Are you ready to embark on an exhilarating
				journey into the world of programming, starting
				from scratch? Dive into our upcoming course and
				unlock the secrets to becoming a proficient
				programmer, equipped with the skills to tackle
				any challenge that comes your way.
			</p>

			<div
				id="waitlist-container"
				class="mx-auto flex flex-col items-center justify-center mt-[5.125rem]"
			>
				<form
					id="waitlist-signup"
					class="flex relative"
				>
					<Mail
						class="fill-base absolute top-1/2 left-5 -translate-y-1/2"
					/>
					<input
						class="bg-rose border-none w-[415px] placeholder-gray-500 pl-20 text-black outline-none focus:bg-rose-moon"
						name="email"
						type="email"
						placeholder="example@mail.com"
						required
					/>
					<button
						id="verify-email-cta"
						type="submit"
						class="bg-rose disabled:bg-rose/60 disabled:text-black/40 font-semibold text-base border-l-base border-l py-5 px-4 text-[1rem]/[1.25rem] hover:bg-rose-moon"
					>
						<span
							>Join the waiting list</span
						>
					</button>
				</form>
				<div
					class="text-xs text-white/40 text-center mt-5"
				>
					<div>
						By providing your email address
						and submitting this form, you
						agree to our <a
							class="hover:text-white text-white/60 underline"
							href="privacy-policy"
							>Privacy Policy</a
						>.
					</div>
					<div>
						Your email address will be used
						to verify your subscription and
						to notify you when the course is
						ready.
					</div>
				</div>
				<div
					id="feedback-container"
					class="mt-5 text-center"
				>
				</div>
			</div>
		</div>

		<BouncingLink
			href="/previews/what-will-you-learn"
			class="mb-16"
		>
			See course preview
		</BouncingLink>

		<footer class="flex justify-center mb-10">
			<div class="font-jura">
				<span>Contact us at:</span>
				<a
					class="underline ml-1 hover:text-foam"
					href={import.meta.env.CONTACT_EMAIL}
				>
					{import.meta.env.CONTACT_EMAIL}
				</a>
			</div>
			<script
				is:inline
				src={"https://www.google.com/recaptcha/api.js?render=" +
					import.meta.env.PUBLIC_CAPTCHA_SITE_KEY}
			></script>
		</footer>
	</div>

	<script>
		const formEl = document.getElementsByTagName("form")[0];
		formEl.addEventListener("submit", onSubmit);

		const feedbackEl =
			document.getElementById("feedback-container");

		async function onSubmit(e: SubmitEvent) {
			e.preventDefault();

			const ctaButton =
				document.getElementById("verify-email-cta");
			ctaButton.setAttribute("disabled", "true");

			grecaptcha.ready(function () {
				grecaptcha
					.execute(
						import.meta.env
							.PUBLIC_CAPTCHA_SITE_KEY,
						{
							action: "submit",
						},
					)
					.then(async function (token: string) {
						const captchaResponse =
							await fetch(
								"/api/verify-captcha",
								{
									method: "POST",
									body: JSON.stringify(
										{
											token,
										},
									),
								},
							).then((res) =>
								res.json(),
							);

						const inputEmail =
							document.querySelector(
								'input[name="email"]',
							) as HTMLInputElement;

						if (!captchaResponse.success) {
							feedbackEl.textContent =
								"Something went wrong on our part. Please try again later and if the issue persists don't hesitate to contact us.";

							feedbackEl.className +=
								" text-red-500";
							return;
						}

						await fetch(
							"/api/verify-email",
							{
								method: "POST",
								body: JSON.stringify(
									{
										email: inputEmail?.value,
									},
								),
							},
						)
							.then((res) =>
								res.json(),
							)
							.then((body) => {
								ctaButton.removeAttribute(
									"disabled",
								);
								const waitlistContainerEl =
									document.getElementById(
										"waitlist-container",
									);
								waitlistContainerEl.removeChild(
									formEl,
								);

								console.log(
									body,
								);
								if (
									body.status ===
									"failed"
								) {
									feedbackEl.textContent =
										"We could not send you the verification email. Please try again and if this issue persists don't hesitate to contact us.";

									feedbackEl.className +=
										" text-red-500";
									return;
								}
								feedbackEl.textContent =
									"Thank you for your interest in this course. We sent you an email where you can confirm your registration. Only then your registration will be completed.";

								feedbackEl.className +=
									" text-success";
							});
					});
			});
		}
	</script>
</Layout>
