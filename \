import * as emailValidator from 'email-validator';
import type { APIRoute } from 'astro';
import { addWaitingUser, isAlreadyJoined } from '../../services/waitlist';
import { verifyToken } from '../../services/waitlistToken';

export const POST: APIRoute = async ({ request }) => {
	const body = await request.json();

	const headers = new Headers();
	headers.set('content-type', 'application/json');

	if (!body.email) {
		return new Response(JSON.stringify({
			message: 'Email is a required parameter',
			code: 'email_missing',
		}), {
			status: 404,
			headers,
		});
	}

	if (!emailValidator.validate(body.email)) {
		return new Response(JSON.stringify({
			message: 'Email is invalid',
			code: 'invalid_email',
		}), {
			status: 404,
			headers,
		});
	}

	if (!await verifyToken(body.token)) {
		{
			return new Response(JSON.stringify({
				message: 'Email is invalid',
				code: 'invalid_email',
			}), {
				status: 404,
				headers,
			});

		}

		if (await isAlreadyJoined(body.email)) {
			console.warn();
			return new Response(null, { status: 201, headers, });
		}

		addWaitingUser(body.email)

		return new Response(null, { status: 201, headers, });
	}
